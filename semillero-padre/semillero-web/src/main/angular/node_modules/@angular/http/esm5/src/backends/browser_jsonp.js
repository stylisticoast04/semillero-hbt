/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
var _nextRequestId = 0;
export var JSONP_HOME = '__ng_jsonp__';
var _jsonpConnections = null;
function _getJsonpConnections() {
    var w = typeof window == 'object' ? window : {};
    if (_jsonpConnections === null) {
        _jsonpConnections = w[JSONP_HOME] = {};
    }
    return _jsonpConnections;
}
// Make sure not to evaluate this in a non-browser environment!
var BrowserJsonp = /** @class */ (function () {
    function BrowserJsonp() {
    }
    // Construct a <script> element with the specified URL
    BrowserJsonp.prototype.build = function (url) {
        var node = document.createElement('script');
        node.src = url;
        return node;
    };
    BrowserJsonp.prototype.nextRequestID = function () { return "__req" + _nextRequestId++; };
    BrowserJsonp.prototype.requestCallback = function (id) { return JSONP_HOME + "." + id + ".finished"; };
    BrowserJsonp.prototype.exposeConnection = function (id, connection) {
        var connections = _getJsonpConnections();
        connections[id] = connection;
    };
    BrowserJsonp.prototype.removeConnection = function (id) {
        var connections = _getJsonpConnections();
        connections[id] = null;
    };
    // Attach the <script> element to the DOM
    BrowserJsonp.prototype.send = function (node) { document.body.appendChild((node)); };
    // Remove <script> element from the DOM
    BrowserJsonp.prototype.cleanup = function (node) {
        if (node.parentNode) {
            node.parentNode.removeChild((node));
        }
    };
BrowserJsonp.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: BrowserJsonp, factory: function BrowserJsonp_Factory(t) { return new (t || BrowserJsonp)(); }, providedIn: null });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(BrowserJsonp, [{
        type: Injectable
    }], function () { return []; }, { build: [], nextRequestID: [], requestCallback: [], exposeConnection: [], removeConnection: [], send: [], cleanup: [] });
    return BrowserJsonp;
}());
export { BrowserJsonp };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImM6L1NlbWlsbGVyby9NYXRlcmlhbHNlc2lvbjMvc2VtaWxsZXJvLWhidC9zZW1pbGxlcm8tcGFkcmUvc2VtaWxsZXJvLXdlYi9zcmMvbWFpbi9hbmd1bGFyL25vZGVfbW9kdWxlcy9AYW5ndWxhci9odHRwL2VzbTUvc3JjL2JhY2tlbmRzL2Jyb3dzZXJfanNvbnAuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7QUFTQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztNQXFDTTs7Ozs4SkFHZSIsImZpbGUiOiJicm93c2VyX2pzb25wLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuaW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbnZhciBfbmV4dFJlcXVlc3RJZCA9IDA7XG5leHBvcnQgdmFyIEpTT05QX0hPTUUgPSAnX19uZ19qc29ucF9fJztcbnZhciBfanNvbnBDb25uZWN0aW9ucyA9IG51bGw7XG5mdW5jdGlvbiBfZ2V0SnNvbnBDb25uZWN0aW9ucygpIHtcbiAgICB2YXIgdyA9IHR5cGVvZiB3aW5kb3cgPT0gJ29iamVjdCcgPyB3aW5kb3cgOiB7fTtcbiAgICBpZiAoX2pzb25wQ29ubmVjdGlvbnMgPT09IG51bGwpIHtcbiAgICAgICAgX2pzb25wQ29ubmVjdGlvbnMgPSB3W0pTT05QX0hPTUVdID0ge307XG4gICAgfVxuICAgIHJldHVybiBfanNvbnBDb25uZWN0aW9ucztcbn1cbi8vIE1ha2Ugc3VyZSBub3QgdG8gZXZhbHVhdGUgdGhpcyBpbiBhIG5vbi1icm93c2VyIGVudmlyb25tZW50IVxudmFyIEJyb3dzZXJKc29ucCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBCcm93c2VySnNvbnAoKSB7XG4gICAgfVxuICAgIC8vIENvbnN0cnVjdCBhIDxzY3JpcHQ+IGVsZW1lbnQgd2l0aCB0aGUgc3BlY2lmaWVkIFVSTFxuICAgIEJyb3dzZXJKc29ucC5wcm90b3R5cGUuYnVpbGQgPSBmdW5jdGlvbiAodXJsKSB7XG4gICAgICAgIHZhciBub2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XG4gICAgICAgIG5vZGUuc3JjID0gdXJsO1xuICAgICAgICByZXR1cm4gbm9kZTtcbiAgICB9O1xuICAgIEJyb3dzZXJKc29ucC5wcm90b3R5cGUubmV4dFJlcXVlc3RJRCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFwiX19yZXFcIiArIF9uZXh0UmVxdWVzdElkKys7IH07XG4gICAgQnJvd3Nlckpzb25wLnByb3RvdHlwZS5yZXF1ZXN0Q2FsbGJhY2sgPSBmdW5jdGlvbiAoaWQpIHsgcmV0dXJuIEpTT05QX0hPTUUgKyBcIi5cIiArIGlkICsgXCIuZmluaXNoZWRcIjsgfTtcbiAgICBCcm93c2VySnNvbnAucHJvdG90eXBlLmV4cG9zZUNvbm5lY3Rpb24gPSBmdW5jdGlvbiAoaWQsIGNvbm5lY3Rpb24pIHtcbiAgICAgICAgdmFyIGNvbm5lY3Rpb25zID0gX2dldEpzb25wQ29ubmVjdGlvbnMoKTtcbiAgICAgICAgY29ubmVjdGlvbnNbaWRdID0gY29ubmVjdGlvbjtcbiAgICB9O1xuICAgIEJyb3dzZXJKc29ucC5wcm90b3R5cGUucmVtb3ZlQ29ubmVjdGlvbiA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgICB2YXIgY29ubmVjdGlvbnMgPSBfZ2V0SnNvbnBDb25uZWN0aW9ucygpO1xuICAgICAgICBjb25uZWN0aW9uc1tpZF0gPSBudWxsO1xuICAgIH07XG4gICAgLy8gQXR0YWNoIHRoZSA8c2NyaXB0PiBlbGVtZW50IHRvIHRoZSBET01cbiAgICBCcm93c2VySnNvbnAucHJvdG90eXBlLnNlbmQgPSBmdW5jdGlvbiAobm9kZSkgeyBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKChub2RlKSk7IH07XG4gICAgLy8gUmVtb3ZlIDxzY3JpcHQ+IGVsZW1lbnQgZnJvbSB0aGUgRE9NXG4gICAgQnJvd3Nlckpzb25wLnByb3RvdHlwZS5jbGVhbnVwID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgICAgaWYgKG5vZGUucGFyZW50Tm9kZSkge1xuICAgICAgICAgICAgbm9kZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKChub2RlKSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIEJyb3dzZXJKc29ucCA9IHRzbGliXzEuX19kZWNvcmF0ZShbXG4gICAgICAgIEluamVjdGFibGUoKVxuICAgIF0sIEJyb3dzZXJKc29ucCk7XG4gICAgcmV0dXJuIEJyb3dzZXJKc29ucDtcbn0oKSk7XG5leHBvcnQgeyBCcm93c2VySnNvbnAgfTtcbiJdfQ==